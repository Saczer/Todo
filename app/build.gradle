apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "pl.olszak.michal.todo"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 23
        versionName "0.0.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-DEBUG'
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

ext {
    daggerVersion = '2.14.1'
    appCompatVersion = '27.0.2'
    constraintLayoutVersion = '1.0.2'
    rxJavaVersion = '2.1.8'
    rxAndroidVersion = '2.0.1'
    timberVersion = '4.6.0'
    lifecycleVersion = '1.1.0'
    roomVersion = '1.0.0'

    junitVersion = '4.12'
    runnerVersion = '1.0.1'
    espressoVersion = '3.0.1'
    assertjVersion = '3.9.0'
    mockitoKotlinVersion = '1.5.0'
    robolectricVersion = '3.6.1'
    threetenversion = '1.0.5'
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support'
                && !requested.name.startsWith('multidex')) {
            details.useVersion(appCompatVersion)
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlinVersion"
    implementation "com.android.support:design:$appCompatVersion"
    implementation "com.android.support:appcompat-v7:$appCompatVersion"
    implementation "com.android.support:recyclerview-v7:$appCompatVersion"
    implementation "android.arch.lifecycle:viewmodel:$lifecycleVersion"
    implementation "android.arch.lifecycle:extensions:$lifecycleVersion"
    implementation "android.arch.persistence.room:runtime:$roomVersion"
    implementation "android.arch.persistence.room:rxjava2:$roomVersion"
    implementation "com.jakewharton.threetenabp:threetenabp:$threetenversion"

    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    implementation "com.jakewharton.timber:timber:$timberVersion"

    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"

    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    kapt "com.android.databinding:compiler:$gradleVersion"
    kapt "android.arch.persistence.room:compiler:$roomVersion"
    kapt "android.arch.lifecycle:compiler:$lifecycleVersion"

    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
    testImplementation "android.arch.persistence.room:testing:$roomVersion"
    testImplementation "org.assertj:assertj-core:$assertjVersion"
    testImplementation "com.nhaarman:mockito-kotlin:$mockitoKotlinVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    androidTestImplementation "com.android.support.test:runner:$runnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoVersion"
}
